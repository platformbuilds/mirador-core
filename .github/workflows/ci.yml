name: CI

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'release/**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read

jobs:
  build-test:
    name: Build, Vet, Test (+Coverage)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache: true

      - name: Download modules
        run: go mod download

      - name: Lint (go vet)
        run: go vet ./...

      - name: Test with coverage
        run: |
          set -o pipefail
          go test ./... -race -covermode=atomic -coverprofile=coverage.out 2>&1 | tee test.out

      - name: Generate JUnit report
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          cat test.out | "$HOME"/go/bin/go-junit-report > junit.xml || true

      - name: Coverage summary
        run: |
          if [ -f coverage.out ]; then
            go tool cover -func=coverage.out | tee coverage.txt
            total=$(go tool cover -func=coverage.out | awk '/total:/ {print $3}')
            echo "COVERAGE=$total" >> $GITHUB_ENV
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            coverage.out
            coverage.txt
            junit.xml
            test.out
          if-no-files-found: ignore

  docs-validation:
    name: Documentation Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r docs/requirements.txt

      - name: Validate documentation build
        run: |
          cd docs
          python -m sphinx -b html . _build/html -W --keep-going

      - name: Check for broken links (optional)
        run: |
          cd docs
          python -m sphinx -b linkcheck . _build/linkcheck || true
        continue-on-error: true

      - name: Upload docs artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-validation
          path: docs/_build/
          retention-days: 7

  govulncheck:
    name: govulncheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache: true
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run govulncheck
        run: $HOME/go/bin/govulncheck ./... | tee govulncheck.txt
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: govulncheck
          path: govulncheck.txt
